volumes:
  mongodb_data: { driver: local }
  
networks:
  rocketchat_network:
    driver: bridge
services:
  rocketchat:
    image: ${IMAGE:-registry.rocket.chat/rocketchat/rocket.chat}:${RELEASE:-latest}
    restart: always
    environment:
      MONGO_URL: mongodb://mongodb:27017/rocketchat
      ROOT_URL: ${ROOT_URL:-http://localhost:3000}
      PORT: ${PORT:-3000}
      DEPLOY_METHOD: docker
    depends_on:
      - mongodb
    expose:
      - ${PORT:-3000}
    ports:
      - "${BIND_IP:-0.0.0.0}:${HOST_PORT:-3000}:${PORT:-3000}"
    networks:
      - rocketchat_network
    

  mongodb:
    image: mongo:${MONGODB_VERSION:-6.0}
    restart: always
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER:-27017}
      MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST:-mongodb}
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
      MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME:-mongodb}
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD:-yes}
    networks:
      - rocketchat_network
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - rocketchat
    networks:
      - rocketchat_network
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    command: >
      certonly --webroot 
      --webroot-path=/var/www/certbot 
      -d ${DOMAIN:-chat.devtools.digital} 
      --email ${EMAIL:-paris.baghdasaryan@gmail.com} 
      --agree-tos 
      --no-eff-email 
      --force-renewal
    networks:
      - rocketchat_network