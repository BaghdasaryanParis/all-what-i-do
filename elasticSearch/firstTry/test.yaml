apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: longhorn-retain
provisioner: driver.longhorn.io
allowVolumeExpansion: true
reclaimPolicy: Delete
volumeBindingMode: Immediate
parameters:
  numberOfReplicas: "2"
  staleReplicaTimeout: "30"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: elasticsearch-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: longhorn-retain

---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: quickstart
spec:
  version: 8.16.1
  nodeSets:
  - name: master
    count: 1
    config:
      node.roles:
        - master
        - ingest
        - remote_cluster_client
      node.store.allow_mmap: false
      xpack.security.http.ssl.enabled: true
      xpack.security.transport.ssl.enabled: true
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn-retain
        resources:
          requests:
            storage: 5Gi
  - name: data-hot
    count: 2
    config:
      node.roles:
        - data_hot
        - data_content
        - ingest
      node.store.allow_mmap: false
    podTemplate:
        metadata:
          labels:
            app: elasticsearch-data-hot
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app
                        operator: In
                        values:
                          - elasticsearch-data-hot
                  topologyKey: "kubernetes.io/hostname"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn-retain
        resources:
          requests:
            storage: 2Gi
  - name: data-warm
    count: 2
    config:
      node.roles:
        - data_warm
        - ingest
      node.store.allow_mmap: false
    podTemplate:
      metadata:
        labels:
          app: elasticsearch-data-warm
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - elasticsearch-data-warm
                topologyKey: "kubernetes.io/hostname"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: longhorn-retain
        resources:
          requests:
            storage: 2Gi
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: quickstart-kb
  namespace: default
spec:
  version: 8.16.1
  count: 1
  elasticsearchRef:
    name: quickstart
  podTemplate:
    metadata:
      annotations:
        kibana.k8s.elastic.co/startup-delay: "180" 
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - node1
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
      containers:
        - name: kibana
          resources:
            requests:
              memory: 512Mi
            limits:
              memory: 1Gi